Extension of Database final Project:
A trip planner database was implemented in MySQL, with a command-line controller app implemented in python. 
This repository contains those files, as well as a React-based frontend under construction

yarn start     -> runs react front-end
yarn start-api -> runs flask api


TODO:
* refresh fetched data when new rows are added
* fix input forms, factor out the input markup into separate component and have it pass data up to rowAdder
* move data treatment to Table from TableWrapper
 - Finish DB CRUD operations
    - Create:   +
    - Read:     +
    - Update:   x
    - Delete:   x
 - test table with more requests
 - handle HTTP errors
 - handle DB fetch errors
 - personalize 

PROBLEMS:
sort by cooked image? might need to add column instead of replacing data with img

NOTES:
initial component structure was
TableWrapper -> Table (API call)
             -> Inputs -> RowAdder -> Table (input data)
with Inputs being selectable based on TableWrapper type and RowAdder it's table being generic 

Could not dynamically pattern the inputs, and could not pass specifications from context without a ton of data in context

restructured to:
Inputs -> TableFetcher -> Table (API call)
             -> RowAdder -> Table (input data)

replaced PyMySQL backend with SQLAlchemy