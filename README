Extension of Database final Project:
A trip planner database was implemented in MySQL, with a command-line controller app implemented in python. 
This repository contains those files, as well as a React-based frontend under construction

yarn start     -> runs react front-end
yarn start-api -> runs flask api


TODO:
Menu panel
* new data is not automatically loaded on update
* save place with pagination on update?
 - test table with more requests
 - handle HTTP errors
 - handle DB fetch errors
 - add error reporting
 - personalize 

PROBLEMS:
many inputs can be negative

NOTES:
initial component structure was
TableWrapper -> Table (API call)
             -> Inputs -> RowAdder -> Table (input data)
with Inputs being selectable based on TableWrapper type and RowAdder it's table being generic 

Could not dynamically pattern the inputs, and could not pass specifications from context without a ton of data in context

restructured to:
Inputs -> TableFetcher -> Table (API call)
             -> RowAdder -> Table (input data)

further restructured to:
CRUDPanel -> InputForm -> Inputs
          -> InputForm -> Inputs
          -> DelteTable
          -> CRUDButtons
          -> TableHeader
          -> Table
          -> TableHeader
^TableContext^ provides specific API and header data
Table and TableHeader are all HTML, all state logic is in CRUDPanel

replaced PyMySQL backend with SQLAlchemy
   cannot tell if automapper is worth it

the saga of checkboxes, radio buttons, and multiselect
